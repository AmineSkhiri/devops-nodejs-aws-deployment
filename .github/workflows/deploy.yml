name: Deploy to AWS ECS & EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 🔐 Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: 🐳 Build and Push Docker image to ECR
        id: ecr
        env:
          ECR_REGISTRY: 890742601773.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: devops-nodejs-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: 🚀 Deploy to ECS (Fargate)
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          ECR_REGISTRY: 890742601773.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: devops-nodejs-app
        run: |
          # Download existing task definition
          aws ecs describe-task-definition --task-definition node-task \
            --query "taskDefinition" > task-definition.json

          # Update image tag
          jq '.containerDefinitions[0].image = "'$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG'"' task-definition.json > new-task-def.json

          # Register new revision
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

          # Get new revision
          REVISION=$(aws ecs describe-task-definition --task-definition node-task \
            --query "taskDefinition.revision" --output text)

          # Update ECS service to use new task definition
          aws ecs update-service \
            --cluster nodejs-cluster \
            --service node-service \
            --task-definition node-task:$REVISION \
            --force-new-deployment \
            --region us-east-1

      - name: ⚙️ Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name nodejs-eks-cluster

      - name: 🛠️ Replace image tag in deployment file
        run: |
          sed "s|\${IMAGE_TAG}|${{ env.IMAGE_TAG }}|g" infrastructure/k8s/deployment.yaml.template > infrastructure/k8s/deployment.yaml

      - name: ☸️ Deploy to EKS
        run: |
          kubectl apply -f infrastructure/k8s/deployment.yaml
          kubectl apply -f infrastructure/k8s/service.yaml
          kubectl rollout status deployment/nodejs-app

      - name: 🌐 Output Load Balancer URLs
        run: |
          echo "🔗 ECS Load Balancer:"
          echo "http://nodejs-app-lb-7780150.us-east-1.elb.amazonaws.com"

          echo "🔗 EKS Load Balancer:"
          kubectl get svc nodejs-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
